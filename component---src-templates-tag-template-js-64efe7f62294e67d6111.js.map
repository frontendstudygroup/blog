{"version":3,"file":"component---src-templates-tag-template-js-64efe7f62294e67d6111.js","mappings":"0KA6CA,IAxCkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,OACE,sBAAIC,MAAO,CAAEC,UAAU,SAClBF,EAAMG,KAAI,SAAAC,GAAS,IAAD,EACXC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,sBAAIC,IAAKL,EAAKG,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYV,KAG/B,6BAAQD,EAAKE,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CL,SAAS,gBALb,UAQIX,EAAKE,YAAYe,YARrB,aAQI,EAAuBlB,KAAI,SAAAmB,GAAG,OAAI,gBAAC,IAAD,CAAOC,KAAMD,gB,6CCrBnE,IAVc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACV,gBAAC,EAAAV,KAAD,CACIC,GAAE,SAAWS,EACbC,IAAI,WACJd,UAAU,SAETa,K,kFCoBT,UAtBoB,SAAC,GAAqC,IAAD,EAAlCE,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC/BC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBzB,QAAxB,QACViB,EAAQK,EAARL,IACR,EAA8BG,EAAKM,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEX,EAFF,IAIf,OACE,gBAAC,IAAD,CAAQI,SAAUA,EAAUrB,MAAOuB,GACjC,gBAAC,IAAD,CACEvB,MAAOiB,IAET,0BAAKY,GACL,gBAAC,EAAArB,KAAD,CAAMC,GAAG,SAAT,kBACCmB,EAAa,GACZ,gBAAC,IAAD,CAAWjC,MAAOgC","sources":["webpack://WomenWhoCodeFrontendBlog/./src/components/blogItems.js","webpack://WomenWhoCodeFrontendBlog/./src/components/label.js","webpack://WomenWhoCodeFrontendBlog/./src/templates/tag-template.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Label from \"../components/label\"\n\nconst BlogItems = ({ posts }) => {\n  return (\n    <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          \n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                  {\n                    post.frontmatter.tags?.map(tag => <Label text={tag} />)\n                  }\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n  )\n}\n\nexport default BlogItems\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Label = ({ text }) => (\n    <Link\n        to={`/tags/${text}`}\n        rel=\"bookmark\"\n        className=\"label\"\n    >\n        {text}\n    </Link>\n);\n\nexport default Label;","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport BlogItems from \"../components/blogItems\"\n\nconst TagTemplate = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext;\n  const { nodes, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={tag}\n      />\n      <h1>{tagHeader}</h1>\n      <Link to=\"/tags\">All categories</Link>\n      {totalCount > 0 && (\n        <BlogItems posts={nodes} />\n      )}\n    </Layout>\n  )\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { tags: { in: [$tag] } } }\n      ) {\n        totalCount\n        nodes {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n    }\n  }\n`;\n"],"names":["posts","style","listStyle","map","post","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","tags","tag","text","rel","data","location","pageContext","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","totalCount","tagHeader"],"sourceRoot":""}